user nginx;
worker_processes auto;  # Automatically set based on CPU cores
worker_rlimit_nofile 65535;  # Increase file descriptor limit for high traffic

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;  # Maximum connections per worker
    multi_accept on;          # Accept as many connections as possible
    use epoll;                # Efficient connection processing on Linux
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging settings
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # Optimization settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # File cache settings
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Compression settings
    gzip on;
    gzip_comp_level 6;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

    # Disable server tokens for security
    server_tokens off;

    # Configure cache for static assets
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=24h max_size=1g;
    
    # Rate limiting zones
    # Different zones for different parts of the application
    limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;  # API requests
    limit_req_zone $binary_remote_addr zone=vote:10m rate=10r/s; # Voting endpoints - higher limit
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s; # General browsing

    # Main server configuration
    server {
        listen 80;
        server_name voting.example.com; # Change to your domain
        
        # Redirect to HTTPS
        return 301 https://$host$request_uri;
    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        server_name voting.example.com; # Change to your domain
        
        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/voting.example.com/fullchain.pem; # Path to your certificate
        ssl_certificate_key /etc/letsencrypt/live/voting.example.com/privkey.pem; # Path to your key
        
        # Optimize SSL
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self'; img-src 'self' data:; style-src 'self' 'unsafe-inline'; font-src 'self'; connect-src 'self' https://apisalticon.onekitty.co.ke;" always;
        
        # Set client body size for uploads - adjust as needed
        client_max_body_size 10M;
        
        # Root directory configuration
        root /var/www/html/voting-system;  # Adjust to your deployment path
        
        # Efficiently serve static assets
        # Special handling for candidate images - crucial after fixing image paths
        location ~* ^/images/.*\.(png|jpg|jpeg|gif|ico)$ {
            expires 7d;
            add_header Cache-Control "public, max-age=604800, immutable";
            proxy_cache STATIC;
            proxy_cache_valid 200 7d;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            access_log off;
            
            # If using Next.js app directory
            try_files $uri @nextjs;
        }
        
        # All other static files
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 30d;
            add_header Cache-Control "public, max-age=2592000, immutable";
            proxy_cache STATIC;
            proxy_cache_valid 200 30d;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            access_log off;
            
            # If using Next.js app directory
            try_files $uri @nextjs;
        }
        
        # API endpoints with higher rate limits for voting
        location ~* ^/api/contribute {
            # Apply rate limiting with burst allowance for high traffic voting
            limit_req zone=vote burst=20 nodelay;
            
            # Pass to Next.js
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache off;
            proxy_buffering off;
            proxy_read_timeout 60s;
        }
        
        # Admin API endpoints with stricter rate limits
        location ~* ^/api/auth {
            # Apply stricter rate limiting for auth endpoints
            limit_req zone=api burst=5 nodelay;
            
            # Pass to Next.js
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache off;
            proxy_buffering off;
            proxy_read_timeout 60s;
        }
        
        # General API endpoints
        location ~* ^/api/ {
            # Apply general API rate limiting
            limit_req zone=api burst=10 nodelay;
            
            # Pass to Next.js
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache off;
            proxy_buffering off;
            proxy_read_timeout 60s;
        }
        
        # Next.js handler
        location / {
            # Apply general browsing rate limiting
            limit_req zone=general burst=30 nodelay;
            
            # Try to serve static files first, then proxy to Next.js
            try_files $uri $uri/ @nextjs;
        }
        
        # Next.js fallback
        location @nextjs {
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
